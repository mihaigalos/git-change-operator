name: CD (Continuous Deployment)

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Trigger on semantic version tags like 1.0.0, 1.1.0, 2.5.10
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., 1.1.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        lfs: true
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Install controller-gen and other tools
      run: |
        # Install controller-gen
        go install sigs.k8s.io/controller-tools/cmd/controller-gen@latest
        
        # Install kustomize
        go install sigs.k8s.io/kustomize/kustomize/v5@latest
        
        # Verify installations
        controller-gen --version
        kustomize version
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set release version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.tag }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Release version: ${VERSION}"
    
    - name: Update Chart version
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        # Remove 'v' prefix if present
        CHART_VERSION="${VERSION#v}"
        APP_VERSION="${VERSION#v}"
        
        echo "Updating Chart.yaml with version: ${CHART_VERSION}, appVersion: ${APP_VERSION}"
        
        # Update Chart.yaml
        yq eval ".version = \"${CHART_VERSION}\"" -i helm/git-change-operator/Chart.yaml
        yq eval ".appVersion = \"${APP_VERSION}\"" -i helm/git-change-operator/Chart.yaml
        
        # Show changes
        echo "Updated Chart.yaml:"
        cat helm/git-change-operator/Chart.yaml | head -10
    
    - name: Run tests
      run: |
        make test
    
    - name: Build and push Docker image
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        APP_VERSION="${VERSION#v}"
        CHART_VERSION="${VERSION#v}"
        
        echo "Building image with version: ${APP_VERSION}"
        
        # Build with version tags
        make docker-build IMG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${APP_VERSION}-${CHART_VERSION}
        make docker-build IMG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        # Push images
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${APP_VERSION}-${CHART_VERSION}
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
    
    - name: Generate manifests
      run: |
        make manifests
        make generate
    
    - name: Package Helm chart
      run: |
        make helm-package
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          helm/packages/*.tgz
          config/crd/bases/v1/*.yaml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Deploy documentation
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        echo "Deploying documentation for release: ${VERSION}"
        
        # Ensure LFS files are available
        git lfs pull
        
        # Setup git for mike
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
        
        # Install docs dependencies
        python -m pip install --upgrade pip
        pip install -r docs/mkdocs/requirements.txt
        
        # Deploy versioned docs
        make docs-version-deploy VERSION=${VERSION#v}
        make docs-version-set-default VERSION=${VERSION#v}

  helm-publish:
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'
    
    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.6.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"