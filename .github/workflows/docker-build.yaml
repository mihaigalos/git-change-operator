name: Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

env:
  GO_VERSION: '1.21'
  REGISTRY: ghcr.io

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install controller-gen
      run: go install sigs.k8s.io/controller-tools/cmd/controller-gen@latest

    - name: Generate manifests and code
      run: |
        make manifests generate

    - name: Build Docker image
      run: make docker-build
      env:
        # Set default empty values to avoid undefined variables
        HTTP_PROXY: ""
        HTTPS_PROXY: ""
        NO_PROXY: ""
        SSL_CERT_FILE: ""

    - name: Extract chart versions
      id: chart-versions
      run: |
        # Extract appVersion and chartVersion from Chart.yaml
        APP_VERSION=$(yq eval '.appVersion' helm/git-change-operator/Chart.yaml | tr -d '"')
        CHART_VERSION=$(yq eval '.version' helm/git-change-operator/Chart.yaml)
        
        # Create combined version tag
        VERSION_TAG="${APP_VERSION}-${CHART_VERSION}"
        
        echo "app-version=${APP_VERSION}" >> $GITHUB_OUTPUT
        echo "chart-version=${CHART_VERSION}" >> $GITHUB_OUTPUT
        echo "version-tag=${VERSION_TAG}" >> $GITHUB_OUTPUT
        
        echo "App Version: ${APP_VERSION}"
        echo "Chart Version: ${CHART_VERSION}"
        echo "Combined Version Tag: ${VERSION_TAG}"

    - name: Tag and push to GHCR
      run: |
        # Use full repository path for GHCR
        IMAGE_NAME="${{ env.REGISTRY }}/${{ github.repository }}"
        
        # Get version information
        APP_VERSION="${{ steps.chart-versions.outputs.app-version }}"
        CHART_VERSION="${{ steps.chart-versions.outputs.chart-version }}"
        VERSION_TAG="${{ steps.chart-versions.outputs.version-tag }}"
        
        # Convert to lowercase for registry compatibility
        IMAGE_NAME=$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]')
        
        # Get the locally built image name (should match Makefile IMG variable)
        LOCAL_IMAGE="ghcr.io/mihaigalos/git-change-operator:latest"
        
        # Tag the image for GHCR with version-specific tags
        docker tag ${LOCAL_IMAGE} ${IMAGE_NAME}:latest
        docker tag ${LOCAL_IMAGE} ${IMAGE_NAME}:${VERSION_TAG}
        
        # Also tag with commit SHA on main branch
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          docker tag ${LOCAL_IMAGE} ${IMAGE_NAME}:${{ github.sha }}
        fi
        
        # Push the images
        docker push ${IMAGE_NAME}:latest
        docker push ${IMAGE_NAME}:${VERSION_TAG}
        
        # Push SHA tag only on main branch
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          docker push ${IMAGE_NAME}:${{ github.sha }}
        fi
        
        echo "âœ… Pushed images:"
        echo "  - ${IMAGE_NAME}:latest"
        echo "  - ${IMAGE_NAME}:${VERSION_TAG}"
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "  - ${IMAGE_NAME}:${{ github.sha }}"
        fi