name: Publish Helm Chart

on:
  push:
    branches: [ main ]
    paths:
      - 'helm/**'
      - '.github/workflows/helm-chart.yaml'
  release:
    types: [published]

permissions:
  contents: write

jobs:
  publish-helm-chart:
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || github.event_name == 'release'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        # Configure git to use the GitHub token for authentication
        git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
        
    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: '3.12.0'
        
    - name: Set version variables
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          CLEAN_VERSION=${VERSION#v}
          echo "version=${CLEAN_VERSION}" >> $GITHUB_OUTPUT
          echo "commit_message=Release Helm chart version ${CLEAN_VERSION}" >> $GITHUB_OUTPUT
        else
          # For main branch pushes, use the version from Chart.yaml
          CHART_VERSION=$(yq eval '.version' helm/git-change-operator/Chart.yaml)
          echo "version=${CHART_VERSION}" >> $GITHUB_OUTPUT
          echo "commit_message=Update Helm chart version ${CHART_VERSION}" >> $GITHUB_OUTPUT
        fi
        
    - name: Prepare helm-chart branch
      run: |
        # Create helm-chart branch if it doesn't exist
        git fetch origin helm-chart:helm-chart 2>/dev/null || git checkout -b helm-chart
        git checkout helm-chart
        
        # Clear the branch and add only the helm chart
        git rm -rf . 2>/dev/null || true
        git clean -fdx
        
        # Checkout helm chart and the config directory it depends on
        git checkout main -- helm/git-change-operator/
        git checkout main -- config/crd/bases/latest/
        git checkout main -- config/crd/bases/v1/
        
    - name: Update Chart versions
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          # Only update versions for releases, use Chart.yaml as-is for main branch
          sed -i "s/^version: .*/version: ${{ steps.version.outputs.version }}/" helm/git-change-operator/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: \"${{ steps.version.outputs.version }}\"/" helm/git-change-operator/Chart.yaml
        else
          echo "Using Chart.yaml version as-is: ${{ steps.version.outputs.version }}"
        fi
        
    - name: Setup helm chart structure
      run: |
        # Debug: Show current structure
        echo "=== Before symlink replacement ==="
        ls -la helm/git-change-operator/crd-files/
        
        # Replace symlinks with actual CRD content BEFORE moving chart
        # This ensures each published chart version contains the CRDs from that specific version
        find helm/git-change-operator/crd-files/ -type l | while read -r symlink; do
          # Get the target file that the symlink points to
          target_file=$(readlink -f "$symlink")
          if [ -f "$target_file" ]; then
            echo "Replacing symlink $symlink with actual content from $target_file"
            rm -f "$symlink"
            cp "$target_file" "$symlink"
            echo "✓ Replaced $symlink"
          else
            echo "❌ Error: Target file $target_file not found for symlink $symlink"
            exit 1
          fi
        done
        
        # Debug: Verify replacement worked
        echo "=== After symlink replacement ==="
        ls -la helm/git-change-operator/crd-files/
        
        # Now move helm chart to root
        echo "=== Moving chart to root ==="
        mv helm/git-change-operator/* .
        rm -rf helm/
        
        echo "=== Final structure ==="
        ls -la .
        
    - name: Package and publish
      run: |
        # Package the chart
        helm package .
        
        # Create or update index
        if [ -f index.yaml ]; then
          helm repo index . --merge index.yaml
        else
          helm repo index .
        fi
        
        # Commit and push
        git add .
        git commit -m "${{ steps.version.outputs.commit_message }}"
        git push origin helm-chart