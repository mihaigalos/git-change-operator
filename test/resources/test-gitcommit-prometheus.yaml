---
apiVersion: gco.galos.one/v1
kind: GitCommit
metadata:
  name: test-gitcommit-prometheus
spec:
  repository: https://github.com/mihaigalos/data-smartmeter.git
  branch: main
  commitMessage: "Smart meter power consumption analysis from Prometheus"
  authSecretRef: github-data-smartmeter
  authSecretKey: token
  ttlMinutes: 5
  restAPIs:
    # SCALAR query - result is [timestamp, value]
    - name: "power-consumption"
      url: "https://cloud.galos.one/prometheus/api/v1/query?query=scalar(max(max_over_time(smartmeter%7Bkind%3D%22total_power%22%7D%5B1d%5D))-max(max_over_time(smartmeter%7Bkind%3D%22total_power%22%7D%5B1d%5D%20offset%201d)))"
      method: "GET"
      timeoutSeconds: 30
      maxStatusCode: 299
      responseParsing:
        condition: 'response.status == "success" && response.data.resultType == "scalar" && size(response.data.result) == 2'
        # For scalar: result[0] = timestamp, result[1] = value
        dataExpression: 'string(timestamp(int(double(response.data.result[0])))) + ", " + (response.data.result[1] == "NaN" ? "No Data" : string.format("%.3f", double(response.data.result[1])))'
        outputFormat: 'data'

    # SCALAR query - result is [timestamp, value]
    - name: "injected-power"
      url: "https://cloud.galos.one/prometheus/api/v1/query?query=scalar(max(max_over_time(smartmeter%7Bkind%3D%22total_powerN%22%7D%5B1d%5D%20offset%20-1d))-min(min_over_time(smartmeter%7Bkind%3D%22total_powerN%22%7D%5B1d%5D%20offset%20-1d)))"
      method: "GET"
      timeoutSeconds: 30
      maxStatusCode: 299
      responseParsing:
        condition: 'response.status == "success" && response.data.resultType == "scalar" && size(response.data.result) == 2'
        # For scalar: just the value part
        dataExpression: '(response.data.result[1] == "NaN" ? "0.0" : string.format("%.3f", double(response.data.result[1])))'
        outputFormat: 'data'

    # VECTOR query - result is array of objects with .value[timestamp, value]
    - name: "current-power"
      url: "https://cloud.galos.one/prometheus/api/v1/query?query=smartmeter%7Bkind%3D%22total_power%22%7D"
      method: "GET"
      timeoutSeconds: 30
      maxStatusCode: 299
      responseParsing:
        condition: 'response.status == "success" && response.data.resultType == "vector" && size(response.data.result) > 0'
        # For vector: result[0].value[0] = timestamp, result[0].value[1] = value
        dataExpression: 'response.data.result[0].value[1] == "NaN" ? "No Data" : string.format("%.3f", double(response.data.result[0].value[1]))'
        outputFormat: 'data'
  files:
    - path: power-readings.csv
      content: "timestamp,power_consumption,injected_power,current_power\n"
      useRestAPIData: true
      restAPIDelimiter: ", "
      writeMode: "append"
